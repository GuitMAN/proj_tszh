@model Web.Models.Counter

@{
    ViewBag.Title = "EditGas";
    Layout = "~/Views/Shared/_LayoutUk.cshtml";
}


<h2>EditGas</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Counter</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.serial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.serial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.serial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfReview, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfReview, new { htmlAttributes = new { @class = "form-control"} })
                    <div id="date"></div>
                @Html.ValidationMessageFor(model => model.DateOfReview, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.place, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.place, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.place, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.status)
                    @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Вернуться", "Gas")
</div>

@section Scripts {
   
    @Styles.Render("~/Styles/jquery-ui")
    <script src="~/Scripts/jquery-1.8.0.js"></script>
    @Scripts.Render("~/bundles/jqueryui")
    <script type="text/javascript">
        $("#date").datepicker({
            minDate: new Date(2007, 1 - 1, 1),
            maxDate: new Date(2016, 1 - 1, 1)
        });
    </script>
}